2. Program with fork() and exec 

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

int main() {
    pid_t pid;

    printf("Parent Process: PID = %d\n", getpid());

    pid = fork();

    if (pid < 0) {
        perror("Fork failed");
        return 1;
    }
    else if (pid == 0) {
        printf("Child Process: PID = %d, Parent PID = %d\n", getpid(), getppid());

        char *args[] = {"ls", "-l", NULL};
        execvp("ls", args);

        perror("exec failed");
        exit(1);
    }
    else {
        printf("Parent is waiting for child to finish...\n");
        wait(NULL);
        printf("Child finished. Parent exiting.\n");
    }

    return 0;
}
