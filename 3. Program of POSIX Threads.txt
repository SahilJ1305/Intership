3. Program of POSIX Threads

#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

// Function to be executed by each thread
void* thread_function(void* arg) {
    int thread_num = *((int*)arg);
    printf("Hello from thread %d! Thread ID: %lu\n", thread_num, pthread_self());
    pthread_exit(NULL);
}

int main() {
    int i;
    const int NUM_THREADS = 3;
    pthread_t threads[NUM_THREADS];
    int thread_ids[NUM_THREADS];

    // Create threads
    for (i = 0; i < NUM_THREADS; i++) {
        thread_ids[i] = i + 1;
        if (pthread_create(&threads[i], NULL, thread_function, &thread_ids[i]) != 0) {
            perror("Failed to create thread");
            return 1;
        }
    }

    // Wait for all threads to finish
    for (i = 0; i < NUM_THREADS; i++) {
        pthread_join(threads[i], NULL);
    }

    printf("All threads completed. Main thread exiting.\n");
    return 0;
}
